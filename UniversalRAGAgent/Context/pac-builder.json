{
  "name": "PAC Builder",
  "nodes": [
    {
      "parameters": {
        "inputSource": "jsonExample",
        "jsonExample": "{\n  \"context_id\": \"823f85559ab443eeabb3887ead1db47b\",\n  \"table_prefix\": \"ura_dev_\",\n  \"userMessage\": \"I like fishing\",\n  \"assistantResponse\": \"That's great! Fishing is a wonderful hobby...\",\n  \"context\": \"{\\\"recent_messages\\\":[{\\\"id\\\":1,\\\"role\\\":\\\"user\\\",\\\"content\\\":\\\"hello\\\",\\\"was_truncated\\\":false},{\\\"id\\\":2,\\\"role\\\":\\\"assistant\\\",\\\"content\\\":\\\"hi there\\\",\\\"was_truncated\\\":false}],\\\"long_term_memories\\\":[{\\\"type\\\":\\\"preference\\\",\\\"content\\\":\\\"User likes fishing\\\"}]}\"\n}"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -528,
        32
      ],
      "id": "a4a8b900-c0df-43ad-a93e-701fc2f4128b",
      "name": "Start"
    },
    {
      "parameters": {
        "content": "Main Orchestrator\n\nCalls 3 subworkflows:\n1. Topic Management - handles topic detection, shifts, summaries\n2. Context Builder - builds complete context with gap filling\n3. Long-term Memory - extracts and manages long-term facts\n\nEach module is independently testable and can be disabled easily.",
        "height": 280,
        "width": 400,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -544,
        -320
      ],
      "id": "9ef6b936-8801-40b1-8efb-e798bd1340d8",
      "name": "Architecture Notes"
    },
    {
      "parameters": {
        "jsCode": "// === Configuration ===\nconst MESSAGE_LENGTH_THRESHOLD = 5000;\nconst TRUNCATE_LENGTH = 1000;\nconst TRUNCATION_SUFFIX = '... [truncated] Message Summary: ';\n\n// Get input data\nconst triggerData = $input.first().json;\nconst contextId = triggerData.context_id;\nconst userMessage = triggerData.userMessage;\nconst assistantResponse = triggerData.assistantResponse;\nconst tablePrefix = triggerData.table_prefix;\nconst contextStr = triggerData.context;\n\n// Process messages and prepare for insertion\nconst items = [];\n\nif (typeof userMessage === 'string' && userMessage.trim()) {\n  const originalMessage = userMessage.trim();\n  const messageLength = originalMessage.length;\n  \n  items.push({\n    json: {\n      context_id: contextId,\n      table_prefix: tablePrefix,\n      context: contextStr,\n      role: 'user',\n      message_original: originalMessage,\n      needs_summary: messageLength > MESSAGE_LENGTH_THRESHOLD,\n      message: messageLength <= MESSAGE_LENGTH_THRESHOLD ? originalMessage : null\n    }\n  });\n}\n\nif (typeof assistantResponse === 'string' && assistantResponse.trim()) {\n  const originalMessage = assistantResponse.trim();\n  const messageLength = originalMessage.length;\n  \n  items.push({\n    json: {\n      context_id: contextId,\n      table_prefix: tablePrefix,\n      context: contextStr,\n      role: 'assistant',\n      message_original: originalMessage,\n      needs_summary: messageLength > MESSAGE_LENGTH_THRESHOLD,\n      message: messageLength <= MESSAGE_LENGTH_THRESHOLD ? originalMessage : null\n    }\n  });\n}\n\nreturn items;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -128,
        32
      ],
      "id": "5cb51ea1-1c01-4f4b-8b21-9ccd1538e820",
      "name": "Prepare Messages"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list",
          "cachedResultName": "public"
        },
        "table": {
          "__rl": true,
          "value": "={{ $json.table_prefix }}chat_transcript",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "context_id": "{{ $('Start').first().json.context_id }}",
            "role": "={{ $json.role }}",
            "message": "{{ $json.message }}",
            "message_original": "{ $json.message_original }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "context_id",
              "displayName": "context_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "role",
              "displayName": "role",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "message_length",
              "displayName": "message_length",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "message_original",
              "displayName": "message_original",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message_original_length",
              "displayName": "message_original_length",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "queryBatching": "independently"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        288,
        32
      ],
      "id": "9b27a561-2d6c-420f-8bd1-d2c8ac3dd2e6",
      "name": "Insert Messages",
      "credentials": {
        "postgres": {
          "id": "p1yb7OdsllaTAj7J",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "aCcvSnqrtw4Wvu61",
          "mode": "list",
          "cachedResultUrl": "/workflow/aCcvSnqrtw4Wvu61",
          "cachedResultName": "SSW Topic Management"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "context_id": "={{ $('Start').first().json.context_id }}",
            "table_prefix": "={{ $('Start').first().json.table_prefix }}",
            "userMessage": "={{ $('Start').first().json.userMessage }}",
            "assistantResponse": "={{ $('Start').first().json.assistantResponse }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "context_id",
              "displayName": "context_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "table_prefix",
              "displayName": "table_prefix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userMessage",
              "displayName": "userMessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "assistantResponse",
              "displayName": "assistantResponse",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        720,
        32
      ],
      "id": "32f07ff9-3ba2-45f5-a042-85eac2385ad1",
      "name": "\ud83d\udccb Topic Management"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "qVRUx4zxcejBWFrz",
          "mode": "list",
          "cachedResultUrl": "/workflow/qVRUx4zxcejBWFrz",
          "cachedResultName": "SSW Context Builder"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "context_id": "={{ $('Start').first().json.context_id }}",
            "table_prefix": "={{ $('Start').first().json.table_prefix }}",
            "context": "={{ $('Start').first().json.context }}",
            "userMessage": "={{ $('Start').first().json.userMessage }}",
            "assistantResponse": "={{ $('Start').first().json.assistantResponse }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "context_id",
              "displayName": "context_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "table_prefix",
              "displayName": "table_prefix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "context",
              "displayName": "context",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userMessage",
              "displayName": "userMessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "assistantResponse",
              "displayName": "assistantResponse",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1088,
        -96
      ],
      "id": "117435e0-bb69-4db9-854d-493118b613c4",
      "name": "\ud83d\udce6 Context Builder"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "U6XLmldA666dEv97",
          "mode": "list",
          "cachedResultUrl": "/workflow/U6XLmldA666dEv97",
          "cachedResultName": "SSW Long Term Memory"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "context_id": "={{ $('Start').first().json.context_id }}",
            "table_prefix": "={{ $('Start').first().json.table_prefix }}",
            "userMessage": "={{ $('Start').first().json.userMessage }}",
            "assistantResponse": "={{ $('Start').first().json.assistantResponse }}",
            "context": "={{ $('Start').first().json.context }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "context_id",
              "displayName": "context_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "table_prefix",
              "displayName": "table_prefix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userMessage",
              "displayName": "userMessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "assistantResponse",
              "displayName": "assistantResponse",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "context",
              "displayName": "context",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "context",
              "displayName": "context",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userMessage",
              "displayName": "userMessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "assistantResponse",
              "displayName": "assistantResponse",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1088,
        128
      ],
      "id": "bc3aef43-8e02-49e3-963d-ecaa76cd2e8e",
      "name": "\ud83e\udde0 Long-term Memory"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO {{ $('Start').first().json.table_prefix }}chat_contexts\n(context_id, context)\nVALUES (\n  '{{ $('Start').first().json.context_id }}',\n  COALESCE(\n    NULLIF($$\n      {{ $('\ud83d\udce6 Context Builder').first().json.context }}\n    $$, '')::jsonb,\n    '{}'::jsonb\n  )\n)\nON CONFLICT (context_id) DO UPDATE SET\n  context    = EXCLUDED.context,\n  updated_at = timezone('utc'::text, now());",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1488,
        32
      ],
      "id": "5fa0ed57-e9a3-44d7-aa82-6a479d1c3952",
      "name": "Upsert Context",
      "credentials": {
        "postgres": {
          "id": "p1yb7OdsllaTAj7J",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "Subworkflow Outputs:\n\n\ud83d\udccb Topic Management\n- topic_shift_detected (bool)\n- current_topic_state (object)\n- summary_created (bool)\n\n\ud83d\udce6 Context Builder\n- complete_context (JSON)\n- gap_filled (bool)\n- transcript_rows (array)\n- summary_rows (array)\n\n\ud83e\udde0 Long-term Memory\n- new_memories (array)\n- removed_memories (array)\n- should_update (bool)",
        "height": 340,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        608,
        288
      ],
      "id": "0108ae8e-cfa2-43c5-b061-2e1d3650e89e",
      "name": "Subworkflow Outputs"
    }
  ],
  "pinData": {},
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Prepare Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Messages": {
      "main": [
        [
          {
            "node": "Insert Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Messages": {
      "main": [
        [
          {
            "node": "\ud83d\udccb Topic Management",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "\ud83d\udccb Topic Management": {
      "main": [
        [
          {
            "node": "\ud83d\udce6 Context Builder",
            "type": "main",
            "index": 0
          },
          {
            "node": "\ud83e\udde0 Long-term Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "\ud83d\udce6 Context Builder": {
      "main": [
        [
          {
            "node": "Upsert Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "\ud83e\udde0 Long-term Memory": {
      "main": [
        [
          {
            "node": "Upsert Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ad471c11-debc-4daf-a9d3-cf538680ad5f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7ac72ab13b8f564b4e52fe865fd322b93ff4a198e7d01a343aa643a3d940b098"
  },
  "id": "e7XF3f8ZZCeSZyw0",
  "tags": []
}